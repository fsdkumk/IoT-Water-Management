
#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>

int TRIGGER = D3;
int ECHO = D2;
int LED_PIN = D4;      // Pin for the LED
int BUZZER_PIN = D5;   // Pin for the buzzer
int BUTTON_PIN = D6;   // Pin for the button

// Replace with your network credentials
const char* ssid = "250102";
const char* password = "1234567890";

ESP8266WebServer server(80);   // Instantiate server at port 80 (http port)
String page = "";
int data;

void setup(void) {
  pinMode(TRIGGER, OUTPUT);
  pinMode(ECHO, INPUT);
  pinMode(LED_PIN, OUTPUT);    // Set LED_PIN as an output
  pinMode(BUZZER_PIN, OUTPUT); // Set BUZZER_PIN as an output
  pinMode(BUTTON_PIN, INPUT_PULLUP); // Set BUTTON_PIN as an input with a built-in pull-up resistor

  digitalWrite(LED_PIN, LOW);    // Turn off the LED initially
  digitalWrite(BUZZER_PIN, LOW); // Turn off the buzzer initially

  delay(1000);
  Serial.begin(115200);

  WiFi.begin(ssid, password);   // Begin WiFi connection

  Serial.println("");

  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  server.on("/", []() {
    page = "<head><meta http-equiv=\"refresh\" content=\"3\"></head><center><h1>Web based Water Level monitor</h1><h3>Current water level is :-</h3> <h4>" + String(data) + "</h4></center>";
    server.send(200, "text/html", page);
  });

  server.begin();
  Serial.println("Web server started!");
}

void loop(void) {
  digitalWrite(TRIGGER, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIGGER, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIGGER, LOW);

  long duration = pulseIn(ECHO, HIGH);
  data = (duration / 2) / 29.09;

  if (data <= 3) {
    digitalWrite(LED_PIN, HIGH);    // Turn on the LED when water level is 3 cm or less
    digitalWrite(BUZZER_PIN, HIGH); // Turn on the buzzer when water level is 3 cm or less
  } else {
    digitalWrite(LED_PIN, LOW);     // Turn off the LED otherwise
    digitalWrite(BUZZER_PIN, LOW);  // Turn off the buzzer otherwise
  }

  // Check if the button is pressed
  if (digitalRead(BUTTON_PIN) == LOW) {
    // Turn off the LED and buzzer
    digitalWrite(LED_PIN, LOW);
    digitalWrite(BUZZER_PIN, LOW);
  }

  server.handleClient();
}

